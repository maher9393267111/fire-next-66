import Head from "next/head";
import Image from "next/image";
import { useState, useEffect } from "react";
import styles from "../styles/Home.module.css";
import { Calendar, utils } from "react-modern-calendar-datepicker";
import "react-modern-calendar-datepicker/lib/DatePicker.css";
import moment from "moment";
import Stack from "@mui/material/Stack";
import Button from "@mui/material/Button";
export default function Home() {
  const [selectedDate, setSelectedDate] = useState({
    year: moment().year(),
    month: moment().month() + 1,
    day: moment().date(),
  });

  var date = new Date();

  const maximumDate = {
    year: moment().year(),
    month: moment().month() + 1,
    day: `${moment().date() + 12}`,
  };

  const disabledTimes = [];

  const [disabledDays, setDisabledDays] = useState([]);

  const [unavailableTimes, setUnavailableTimes] = useState([]);

  const handleCalendar = (e) => {
    setSelectedDate(e);
    console.log(e); // handle selected date
    setDisabledDays([...disabledDays, e]);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />

        <link
          rel="stylesheet"
          href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css"
          integrity="sha512-hoalWLoI8r4UszCkZ5kL8vayOGVae1oxXe/2A4AO6J9+580uKHDO3JdHb7NzwwzK5xr/Fs0W40kiNHxM9vyTtQ=="
          crossorigin=""
        />

        <script
          src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"
          integrity="sha512-BB3hKbKWOc9Ez/TAwyWxNXeoV9c1v6FIeYiBieIWkpLjauysF18NzgR1MBNBXf8/KABdlkX68nAhlwcDFLGPCQ=="
          crossorigin=""
        ></script>
      </Head>

      <div>
        hello man
        <div className="flex flex-col">
          <Calendar
            value={selectedDate}
            onChange={handleCalendar}
            minimumDate={utils().getToday()}
            maximumDate={maximumDate}
            shouldHighlightWeekends
            disabledDays={disabledDays}
          />

          {/* <Calendar
              onChange={handleCalendar}
              calendarClassName='border-2 border-pink-200 h-[100% dark:border-neutral-900'
              colorPrimary='#f8a4d1'
              value={selectedDate}
              minimumDate={utils().getToday()  }
              maximumDate= { max }
           
              disabledDays={disabledDays}
            /> */}
        </div>
        <Stack spacing={2} direction="row">
          <Button variant="text">Text</Button>
          <Button variant="contained">Contained</Button>
          <Button variant="outlined">Outlined</Button>
        </Stack>
      </div>
    </div>
  );
}
