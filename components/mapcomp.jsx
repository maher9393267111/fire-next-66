


import { useState, useEffect, useRef,useMemo } from 'react'
import Head from 'next/head'
import { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet'
import L from "leaflet";

function Home() {


    const markericon =  "https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png";
 
    const pinMB = L.icon({
      iconUrl: markericon,
      iconSize: [24, 41],
      iconAnchor: [0, 44],
      popupAnchor: [12, -40],
      shadowUrl: null,
      shadowSize: null,
      shadowAnchor: null,
    });


    const center = {
     
        lat: 40.766666,
        lng: 29.916668,
     
      }


    const [position, setPosition] = useState(center)
    const markerRef2 = useRef(null)
    const eventHandlers = useMemo(
      () => ({
        dragend() {
          const marker = markerRef2.current
         
          if (marker != null) {
            console.log('----->',marker.getLatLng())

            setPosition(marker.getLatLng())
          }
        },
      }),
      [],
    )






    const [markerPos, setMarkerPos] = useState({
        lang: 29.916668,
        Lat: 40.766666,
    })
    const [fixedMarkerPos, setFixedMarkerPos] = useState({
        lang: 29.916668,
        Lat: 40.666666,
    })

    const changeMarkerPos = (e) => {

        console.log('changeMarkerPos--->', markerRef.current._latlng)
        setMarkerPos({
            lang: markerRef.current._latlng.lng,
            Lat: markerRef.current._latlng.lat,
        })
        console.log('changeMarkerPos', markerPos)

    }

    const markerRef = useRef();
    const fixedMarkerRef = useRef();


    useEffect(() => {
        console.log(`lat diff: ${markerPos.Lat - fixedMarkerPos.Lat}, lng diff: ${markerPos.lang - fixedMarkerPos.lang}`);
    }, [markerPos, fixedMarkerPos])

   

 

    return (
        <div className="App">

            <div>
                <Head>
                    <title>Create Next App</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />

                    <link
                        rel="stylesheet"
                        href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css"
                        integrity="sha512-hoalWLoI8r4UszCkZ5kL8vayOGVae1oxXe/2A4AO6J9+580uKHDO3JdHb7NzwwzK5xr/Fs0W40kiNHxM9vyTtQ=="
                        crossorigin=""
                    />

                    <script
                        src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"
                        integrity="sha512-BB3hKbKWOc9Ez/TAwyWxNXeoV9c1v6FIeYiBieIWkpLjauysF18NzgR1MBNBXf8/KABdlkX68nAhlwcDFLGPCQ=="
                        crossorigin=""
                    ></script>
                </Head>
            </div>



            <header className="App-header">

           

                <MapContainer
                    center={[markerPos.Lat, markerPos.lang]}

                    zoom={13} scrollWheelZoom={false}>
                    <TileLayer
                        attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                        url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
                    />
                    <Marker
                    icon={pinMB}
                   // eventHandlers={eventHandlers}

                        draggable={true}
                        onDragend={changeMarkerPos}
                        ref={markerRef}
                      //  position={position}

                        position={[markerPos.Lat, markerPos.lang]}
                      >
                        <Popup>
                            A pretty CSS3 popup. <br /> Easily customizable.
                        </Popup>
                    </Marker>

                

                </MapContainer>,

                <div>
                    <h1
                        onClick={changeMarkerPos}
                    >change maps</h1>
                    <p>  {markerPos.Lat}  ------  {markerPos.lang}</p>
                </div>

            </header>
        </div>

    )
}

export default Home


