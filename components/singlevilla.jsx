import React from "react";
import { useState, useEffect, useRef } from "react";
import Head from "next/head";
import L from "leaflet";
import Script from 'next/script'
import { MapContainer, TileLayer, useMap, Marker, Popup } from "react-leaflet";
//import { Calendar, utils } from "react-modern-calendar-datepicker";
import moment from "moment"


import DatePicker  from "react-datepicker";


import "react-datepicker/dist/react-datepicker.css";





import { globaluse } from "../context/global";
import { addDays } from "date-fns";
const markericon =
  "https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png";

const Singlevilla = ({ villa }) => {
  const { senddisabledDays } = globaluse();
  const pinMB = L.icon({
    iconUrl: markericon,
    iconSize: [24, 41],
    iconAnchor: [0, 44],
    popupAnchor: [12, -40],
    shadowUrl: null,
    shadowSize: null,
    shadowAnchor: null,
  });

  const [markerPos, setMarkerPos] = useState({
    lang: 29.916668,
    Lat: 40.766666,
  });
  const [fixedMarkerPos, setFixedMarkerPos] = useState({
    lang: 29.916668,
    Lat: 40.666666,
  });

  const markerRef = useRef();

  const [selectedDate, setSelectedDate] = useState({
    year: moment().year(),
    month: moment().month() + 1,
    day: moment().date(),
  });

  

  const maximumDate = {
    year: moment().year(),
    month: moment().month() + 1,
    day: `${moment().date() + 12}`,
  };

  const disabledTimes = [];

  const [disabledDays, setDisabledDays] = useState([]);

  const [unavailableTimes, setUnavailableTimes] = useState([]);

  const handleCalendar = (e) => {
    setSelectedDate(e);
    console.log(e); // handle selected date
    setDisabledDays([...disabledDays, e]);
  };

  // send disabledDays to the firebase

  const sendDisabledDays = () => {
    console.log("---->", disabledDays);
    console.log(villa.id);
    senddisabledDays(villa.id, disabledDays);
  };



const handledatechnage = (e) => {

  setStartDate(e);
  console.log(startDate);

}

//-------------------------------
const [startDate, setStartDate] = useState(new Date());
  const [endDate, setEndDate] = useState(null);
  const onChange = (dates) => {
    const [start, end] = dates;
   // console.log('start ðŸ”¥ðŸ”¥', start , 'end ðŸ”¥ðŸ”¥ ' , end)
    setStartDate(start);
    setEndDate(end);
    // 

    const startDate = moment(start).format("YYYY-MM-DD");
    const endDate = moment(end).format("YYYY-MM-DD");
    console.log(startDate, endDate);
    // then disable the dates
    const disabledDays = [];
    for (let i = 0; i < endDate.length; i++) {
      disabledDays.push(endDate[i]);
    }
    setDisabledDays(disabledDays);


  };

  const date = new Date();

  const addDays = (date, days)=> {


    const copy = new Date(Number(date))
    copy.setDate(date.getDate() + days)
    return copy
  }
  

  



//------------------------------------










  return (
    <div>
      <div>
        <Head>
          <title>Create Next App </title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />

          <link
            rel="stylesheet"
            href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css"
            integrity="sha512-hoalWLoI8r4UszCkZ5kL8vayOGVae1oxXe/2A4AO6J9+580uKHDO3JdHb7NzwwzK5xr/Fs0W40kiNHxM9vyTtQ=="
            crossOrigin=""
          />
          
        </Head>

<>

<Script
            src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"
            integrity="sha512-BB3hKbKWOc9Ez/TAwyWxNXeoV9c1v6FIeYiBieIWkpLjauysF18NzgR1MBNBXf8/KABdlkX68nAhlwcDFLGPCQ=="
            crossOrigin=""
          ></Script>
</>


      </div>

      <div>
        <div>
          {}
          <img src={villa.images[0]} alt={villa.name} />

          <div className=" flex mr-6 ml-6 pb-6 justify-between ">
            <div className="villa-info">
              <h2>{villa.name}</h2>

              <h3>{villa.coordinate.lat}</h3>
              <h3>{villa.coordinate.lng}</h3>
              <h3>{villa.price}</h3>
            </div>

            {/* // data picke- */}

            <div>
              <div className="flex flex-col">


              <DatePicker
              
      selected={startDate}
      onChange={onChange}
      startDate={startDate}
      endDate={endDate}
      excludeDates={disabledDays}
   //   excludeDates={[addDays(new Date(), 1), addDays(new Date(), 5)]}
      selectsRange
      selectsDisabledDaysInRange
      inline
    />


            

                <div>
                  <button onClick={sendDisabledDays}>make check in</button>
                </div>
              </div>
            </div>
          </div>

          <div>
            <MapContainer
              center={[villa.coordinate.lat, villa.coordinate.lng]}
              zoom={13}
              scrollWheelZoom={false}
            >
              <TileLayer
                attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
              />
              <Marker
                icon={pinMB}
                // draggable={true}
                // onDragend={updatePosition}
                ref={markerRef}
                position={[villa.coordinate.lat, villa.coordinate.lng]}
              >
                <Popup>
                  <p className="popup">villa image</p>
                  <img
                    className="popup-img   w-[77px]  h-[77px]"
                    src={villa.image}
                    alt="SacrÃ©-Coeur"
                  />
                </Popup>
              </Marker>

              {/* <Marker
          position={[fixedMarkerPos.Lat, fixedMarkerPos.lang]}
          ref={fixedMarkerRef}
        /> */}
            </MapContainer>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Singlevilla;
